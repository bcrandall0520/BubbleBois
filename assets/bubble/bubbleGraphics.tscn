[gd_scene load_steps=6 format=3 uid="uid://dka8f6grhfax1"]

[ext_resource type="Texture2D" uid="uid://b67gk2phgku4" path="res://assets/bubble/bubble.png" id="1"]

[sub_resource type="Shader" id="1"]
code = "shader_type canvas_item;
uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;
uniform float refractionMagnitude = 30.0;
void fragment() {
	
	vec3 refraction = - texture(NORMAL_TEXTURE, UV).rgb * vec3(	1.0, -1.0, 1.0);
	
	vec4 textureRead = texture(TEXTURE, UV);
	vec4 offsetScreenRead = textureLod(SCREEN_TEXTURE, SCREEN_UV + refraction.rg/refractionMagnitude, 0.0);
	
	if (textureRead.a > 0.04) {
		COLOR = offsetScreenRead;	
	}
	else {
		COLOR = textureRead;
	}	
}"

[sub_resource type="ShaderMaterial" id="2"]
shader = SubResource("1")
shader_parameter/refractionMagnitude = 30.0

[sub_resource type="Shader" id="3"]
code = "shader_type canvas_item;

uniform float timeScale = 2;
uniform float amplitude = 1.0f;

void vertex() {
	VERTEX .y += sin(TIME * timeScale + VERTEX.y + VERTEX.x) * amplitude;
}


"

[sub_resource type="ShaderMaterial" id="4"]
shader = SubResource("3")
shader_parameter/timeScale = 2.0
shader_parameter/amplitude = 1.0

[node name="BubbleRefractionGraphics" type="Sprite2D"]
material = SubResource("2")
texture = ExtResource("1")

[node name="BubbleTextureGraphics" type="Sprite2D" parent="."]
material = SubResource("4")
scale = Vector2(1.124, 1.124)
texture = ExtResource("1")
